#+TITLE: Blogging in Github - Part 2. How It Works
#+DATE: 2023-10-07
#+AUTHOR: arcmode

I am trying to get more active on this blog. I want to start adding posts more often
so I can exercise my writing skills and motivate myself to try new things and share more.

* Tooling
In the previous post I presented the tools I am using for building this blogging system. I found examples
online of people using this approach so I decided to make my own borrwing the snippets that I needed to get started.

To summarize, the tools I am using at the moment are the following

1. Source
   1. MarkDown
   2. Org mode
   3. LaTeX
2. Build system
   1. Make
   2. Pandoc
3. Deployment system
   1. Make
   2. GitHub Pages

** Why Org mode
The initial setup for this blog was based on Markdown. Thanks to Pandoc, today I am working on
adding Org mode as an option for wriging posts too.

Some of the things I like the most about Org mode

1. Emacs support
2. Pandoc compatible
3. Multi-purpose: documentation, literate coding, blogging, writing, etc...

That's it. I don't know if I will use Org mode or Markdown more but having both available is cool
and working with Org mode is always somethig I find to be fun. One one hand
GitHub has great Markdown support including some neat features like mermaidjs diagrams
but on the other hand Org mode offers many great features too like being able to include entire
files in the generated output and the ability to execute code (similar to a jupyter notebook).

** Why LaTeX
I fell in love with LaTeX when I was a student. I don't have a good excuse yet to use it in the blog but I am
hoping to find one soon. Until then I will not expand on it. If you are not familiar with LaTeX don't worry as it is not
required for anything related to blogging or anything at all regarding how to publish your blog as a GitHub Page.

* Architecture
The entire architecture is encapsulated in a single Makefile and the contract it defines
with the source files in terms of directory structures and file extensions.

For example, files with supported extensions for the blogging source files are expected to
be present at =blog/*/*.{md,org,text}= where the first level after blog signifies a given
blog category as a filesystem directory and the second one is expected to target a specific file under that directory.

** File and repository structure

Currently the repository contains two deployment targets managed as git remotes. This works because GitHub automatically deploys
the static files on repositories following their guidelines. You can google for GitHub pages and GitHub profiles to learn about the details.

The blog and profile are generated as different folders using Pandoc, then each output
is pushed to the respective git remote. The blog uses =origin= and the profile page uses a git sub-tree targeting it's own remote.

1. Blog -> github:<username>.github.io.git
2. Profile -> github:<username>.git

That's it for now. Here's the Makefile if you want to take a look. You can also find it in the [[https://github.com/arcmode/arcmode.github.io][]]
#+INCLUDE: "../../Makefile" src makefile

Thanks for reading, if you have any question just hit me up by email at =drojascamaggi@gmail.com=
